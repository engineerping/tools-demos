package com.example.anytest.a_sorting;

/**
 * @author gongchengship@163.com
 *
 */
public class A_1_Create_Array_In_3_Ways {

    /**
     * 1.数组也是一个对象,是可以 new 的,
     * 2.new 的时候在方括号中指出 长度, 长度不可变.
     * -. 不进行初始化
     */
    int[] intArrayNew = new int[8];

    /**
     * 声明一个数组, 然后静态初始化, (一般用途不大)
     */
    int[] intArray = {1, 2, 3, 4, 5, 6, 7, 8};
    //它是这种方式的简写
    int[] intArray0 = new int[] {1, 2, 3, 4, 5, 6, 7, 8};


    ///////////////////////////////////////////////////
    /**
     * 二维数组的创建
     */
    int[][] int2DArrayNew = new int[8][8];

    /**
     * 声明一个二维数组,静态初始化
     */
    int[][] int2DArray = {
            {1, 2, 3, 4, 5, 6, 7, 8},
            {2, 2, 3, 4, 5, 6, 7, 8},
            {3, 2, 3, 4, 5, 6, 7, 8},
            {4, 2, 3, 4, 5, 6, 7, 8},
            {5, 2, 3, 4, 5, 6, 7, 8},
            {6, 2, 3, 4, 5, 6, 7, 8},
            {7, 2, 3, 4, 5, 6, 7, 8},
            {8, 2, 3, 4, 5, 6, 7, 8},
    };

    /**
     * 二维数组的第二种创建方式, 这种方式可以创建一个二维数组, 但是数组的每一行长度可以不同
     * 数组的第一维长度确定(可以认为横向确定是 8 列)
     * 数组的第二维待定(就是竖 方向 上的数组是多高<即矩阵的行数>待定),只是声明了 竖方向上 将存储 一个一维数组,并没有初始化该一维数组
     */
    int[][] intArray2_1 = new int[8][];




}
